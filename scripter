#!/bin/bash

declare SCAN_NAME
declare DEC

if [ -z "$1" ]; then
        echo "[*] The scripter needs a target.."
        echo "[*] Usage: $0 <target-IP ADDRESS>"
        exit 0
fi

SCAN_NAME=$1

##########	>>>HOUSEKEEPING<<<   ##########

if [ -e /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES ];then
	echo "Removing the previous temp files.."
	rm -f /root/NMAP/${SCAN_NAME}.d/UNIQUE_PORT* 
	rm -f /root/NMAP/${SCAN_NAME}.d/UNIQUE_SERVICES 
	rm -f /root/NMAP/${SCAN_NAME}.d/SCRIPT*
	rm -f /root/NMAP/${SCAN_NAME}.d/NSE*
fi


if [[ -e "/root/NMAP/${SCAN_NAME}.d/${SCAN_NAME}_TCPscan_full" && -e "/root/NMAP/${SCAN_NAME}.d/${SCAN_NAME}_UDPscan_1000" ]]
then
	echo ""
	echo "--------------------------------------------------------------------------------"
	echo "Checking the services for >>> ALL 65535 TCP and TOP 1000 UDP <<< scanned ports.."
	echo "--------------------------------------------------------------------------------"
	echo ""

	cat /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp

	echo ""
	echo "--------------------------------------"
        echo ">>> Consider to scan all UDP ports <<<"
	echo "--------------------------------------"
        echo ""


else
	echo ""
	echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
	echo "+								+"
	echo "+   There is NO FULL TCP PORT SCAN file in the directory  +"
	echo "+								+"
	echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

fi


cat /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp | awk -F " " '{print $3}' | cut -d "/" -f1 | cut -d "-" -f 1 | sed 's/[!@#$%^&*()_+"?]//g' > /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES
cat /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp | cut -d "/" -f 1 > /root/NMAP/${SCAN_NAME}.d/UNIQUE__PORT_NUMS_temp	
paste /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES /root/NMAP/${SCAN_NAME}.d/UNIQUE__PORT_NUMS_temp > /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS

sed -e 's/netbios/smb/g' /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS > /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS_TMP 
mv /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS_TMP /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS


sleep 3

for services in $(cat /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES);do
	ls /usr/share/nmap/scripts | grep -w $services >> /root/NMAP/${SCAN_NAME}.d/NSE_SCRIPTS
done

#echo ""
#echo "****************************************"
#echo "The following scripts were find: "
#echo "****************************************"
#echo ""
#cat /root/NMAP/${SCAN_NAME}.d/NSE_SCRIPTS
#echo "----------------------------------------"
#sleep 3

#read -p "Do you want to delete some of the scripts?[y/n]" -n 1 -r
#echo
#if [ "$DEC" =~^(yes|y| ) ]; then
#	read -p "Which lines do you want to delete? [1,2,3 or 1-3]"
#	
#	echo


echo "****************************************"
echo "The below scripts *could* be run, cros-check"
echo "them with running services, the parser "
echo "could missed smth "
echo "****************************************"

NUM_LINES=`wc -l /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | cut -d " " -f1`
for ((a=1; a <= NUM_LINES ; a++));do
	echo "nmap -p$(cat /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | cut -f2 | sed -n ''$a''p) $1 --script=banner,\"(not default) and $(cat /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | cut -f1 | sed -n ''$a''p)-*\"" | tee -a /root/NMAP/${SCAN_NAME}.d/SCRIPTS_NMAP
	echo ""
done

if [[ "$(grep -cim1 "smb" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then
	echo "****************************************"
	echo "NOTE that in the scripts for the netbios service"
	echo "the SAMBA sripts were launched "
	echo "****************************************"
fi

echo ""
echo "****************************************"
echo "Launching the scripts..."	
echo "****************************************"
echo ""


tabber () {
WID=$(xprop -root | grep "_NET_ACTIVE_WINDOW(WINDOW)"| awk '{print $5}')
xdotool windowfocus $WID
xdotool key ctrl+shift+t
wmctrl -i -a $WID
sleep 1;
xdotool type --delay 1 --clearmodifiers "$1 $2 $3";
xdotool key Return;
}


touch /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS

NUM_LINES=`wc -l /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | cut -d " " -f1`

###################################### FTP check ####################################################

if [[ "$(grep -cim1 "ftp" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then

tabber "echo FTP__CHECK; nmap -v -p$(cat /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | grep "ftp" | cut -f2) $1 --script=banner,\"ftp-anon,ftp-bounce,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,tftp-enum,ftp-brute\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

fi
 
###################################### SAMBA check ####################################################

if [[ "$(grep -cim1 "smb" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then

tabber "echo SAMBA__CHECK_enum; nmap -v -sS -sU -p$(cat /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | grep "smb" | cut -f2 | tr '\n' ','| sed 's/.$//'),445 $1 --script=banner,\"smb-brute,smb-enum-domains,smb-enum-groups,smb-enum-processes,smb-enum-sessions,smb-enum-shares,smb-enum-users,smb-ls,smb-mbenum,smb-os-discovery,smb-print-text,smb-psexec,smb-security-mode,smb-server-stats,smb-system-info,smbv2-enabled,msrpc-enum.nse\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS" 

tabber "echo SAMBA__CHECK_vuln;nmap -v -sS -sU -p$(cat /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | grep "smb" | cut -f2 | tr '\n' ','| sed 's/.$//'),445 $1 --script=banner,\"smb-vuln-conficker,smb-vuln-cve2009-3103,smb-vuln-ms06-025,smb-vuln-ms07-029,smb-vuln-ms08-067,smb-vuln-ms10-054,smb-vuln-ms10-061,smb-vuln-regsvc-dos\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"
 
tabber "enum4linux -a $1 | tee -a  /root/NMAP/${SCAN_NAME}.d/ENUM4LINUX"

fi

###################################### SMTP check #####################################################

if [[ "$(grep -cim1 "smtp" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then

tabber "echo SMTP__CHECK; nmap -v -sS -p$(cat /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | grep "smtp" | cut -f2 ) $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep smtp | sed 's/.nse//g'| tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

fi

###################################### TELNET check ####################################################

if [[ "$(grep -cim1 "telnet" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then

tabber "echo TELNET__CHECK; nmap -v -sS -p$(cat /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | grep "telnet" | cut -f2 ) $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep telnet | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS; echo TELNET IS OPEN!!!"

fi

###################################### HTTP check #####################################################

if [[ "$(grep -cim1 "http" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then


tabber "echo HTTP__CHECK; nmap -v -sS -p80,443 $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep http | grep -v vuln | grep -v brute | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

tabber "echo HTTP_VULN__CHECK; nmap -v -sS -p80,443 $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep http | grep vuln | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

tabber "echo HTTP_BRUTE__CHECK; nmap -v -sS -p80,443 $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep http | grep brute | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"


tabber "nikto -h $1 | tee -a  /root/NMAP/${SCAN_NAME}.d/NIKTO_$1"
  
tabber "gobuster -u http://$1/  -w /usr/share/seclists/Discovery/Web_Content/common.txt -s '200,204,301,302,307,403,500' -e | tee -a  /root/NMAP/${SCAN_NAME}.d/COMMON_GOBUSTER_$1"

tabber "gobuster -u http://$1/  -w /usr/share/seclists/Discovery/Web_Content/cgis.txt -s '200,204,301,302,307,403,500' -e | tee -a  /root/NMAP/${SCAN_NAME}.d/CGI_GOBUSTER_$1"

fi

###################################### SSL check #######################################################

if [[ "$(grep -cim1 "ssl" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then

tabber "echo SSL__CHECK; nmap -v -sS -p443 $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep ssl | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

fi

###################################### MS-SQL check #######################################################

if [[ "$(grep -cim1 "ms-sql" /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp)" -ge 1 ]];then

tabber "echo MS-SQL__CHECK; nmap -v -sS -sU -p$(cat /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp | grep ms-sql | cut -d / -f1 | tr '\n' ','| sed 's/.$//') $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep "ms-sql" | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

fi

###################################### MYSQL check #######################################################

if [[ "$(grep -cim1 "mysql" /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp)" -ge 1 ]];then

tabber "echo MYSQL__CHECK; nmap -v -sS -sU -p$(cat /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp | grep mysql | cut -d / -f1 | tr '\n' ','| sed 's/.$//') $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep "mysql" | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

fi

###################################### SSH check #######################################################

if [[ "$(grep -cim1 "ssh" /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp)" -ge 1 ]];then

tabber "echo SSH__CHECK; nmap -v -sS -sU -p$(cat /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp | grep ssh | cut -d / -f1 | tr '\n' ','| sed 's/.$//') $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep "ssh" | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

fi

###################################### MSRPC check #######################################################

if [[ "$(grep -cim1 "msrpc" /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp)" -ge 1 ]];then

tabber "echo MSRPC__CHECK; nmap -v -sS -sU -p$(cat /root/NMAP/${SCAN_NAME}.d/UNIQUE__SERVICES_temp | grep msrpc | cut -d / -f1 | tr '\n' ','| sed 's/.$//') $1 --script=banner,\"$(ls /usr/share/nmap/scripts/ | grep "msrpc" | sed 's/.nse//g' | tr '\n' ','| sed 's/.$//')\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

fi

###################################### SNMP check ######################################################

if [[ "$(grep -cim1 "snmp" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then

tabber "echo SNMP__CHECK; nmap -v -sU -p$(cat /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS | grep $services | cut -f2 | tr '\n' ','| sed 's/.$//' ), $1 --script=banner,\"snmp-*\" | tee -a  /root/NMAP/${SCAN_NAME}.d/SCRIPT_RESULTS"

tabber "snmp-check $1 | tee -a  /root/NMAP/${SCAN_NAME}.d/SNMP_CHECK"

gnome-terminal -x sh -c "echo USER ACCOUNTS;snmpwalk -c public -v1 $1 1.3.6.1.4.1.77.1.2.25;
			 echo Software Name;snmpwalk -c public -v1 $1 1.3.6.1.2.1.25.6.3.1.2; 
			 echo Storage Units;snmpwalk -c public -v1 $1 1.3.6.1.2.1.25.2.3.1.4; 
			 echo Process Path;snmpwalk -c public -v1 $1 1.3.6.1.2.1.25.4.2.1.4; 
			 echo Running Programs;snmpwalk -c public -v1 $1 1.3.6.1.2.1.25.4.2.1.2; 
			 echo System Processes;snmpwalk -c public -v1 $1 1.3.6.1.2.1.25.1.6.0; 
			 echo TCP Local Portss;snmpwalk -c public -v1 $1 1.3.6.1.2.1.13.1.3;bash" 2>/dev/null

fi


sleep 5

echo ""
echo "[+]"
echo "[+] The results from the nmap scripts will be stored in ${SCAN_NAME}.d/SCRIPT_RESULTS"
echo "[+]"
echo ""

if [[ "$(grep -cim1 "http" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then
	echo ""
        echo "[+]"
        echo "[+] HTTP is present run DIRBUSTER!"
	echo "[+] and do not forget about MEDUSA"
        echo "[+]"
        echo "[+] medusa -h <IPADDRESS> -u <USERNAME> -P /usr/share/wordlists/rockyou.txt -M http -m DIR:/<SUBFOLDER> -f -b -t <NUMofLOGINS>"
        echo "[+] hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.11.1.24 http-post-form \"/admin.php:user_login=^USER^&password=^PASS^&Login=Login:F=incorrect:H=Location: http://10.11.1.24/admin.php?target=auth\" "
	echo "[+] hydra -l ralph -P /usr/share/wordlists/rockyou.txt 10.11.1.31 http-post-form \"/base-login.asp:txtLoginID=^USER^&txtPassword=^PASS^&cmdSubmit=Login:ACCESS DENIED\" -V -f -t 8 "
	echo ""
fi

if [[ "$(grep -cim1 "rdp" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then
	echo ""
        echo "[+]"
        echo "[+] RDP is present run NCRACK!"
        echo "[+]"
        echo "[+] ncrack -u <USER> -P /usr/share/wordlists/rockyou.txt -p <PORT> <IPADDRESS>"
        echo "[+]"
	echo ""
fi

if [[ "$(grep -cim1 "snmp" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then
	echo ""
        echo "[+]"
        echo "[+] SNMP is present run HYDRA!"
        echo "[+]"
	echo ""
fi

if [[ "$(grep -cim1 "ssh" /root/NMAP/${SCAN_NAME}.d/SCRIPT_ARGS)" -ge 1 ]];then
	echo ""
        echo "[+]"
        echo "[+] SSH is present run HYDRA or NCRACK!"
        echo "[+]"
        echo "[+] ncrack -u root/<USERNAME> <IPADDRESS>:22"
        echo "[+]"
	echo "[+] hydra -l root/<USERNAME> -P /usr/share/wordlists/rockyou.txt $1  ssh"
	echo ""
fi
